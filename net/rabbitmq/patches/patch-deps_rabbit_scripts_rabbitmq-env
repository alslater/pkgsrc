$NetBSD: patch-deps_rabbit_scripts_rabbitmq-env,v 1.2 2019/07/23 16:12:39 jperkin Exp $

Remove cumbersome symlink handling, we know where stuff is.

--- deps/rabbit/scripts/rabbitmq-env.orig	2020-09-23 22:49:25.000000000 +0000
+++ deps/rabbit/scripts/rabbitmq-env
@@ -1,4 +1,4 @@
-#!/bin/sh -e
+#!/bin/bash -e
 ##  The contents of this file are subject to the Mozilla Public License
 ##  Version 1.1 (the "License"); you may not use this file except in
 ##  compliance with the License. You may obtain a copy of the License
@@ -20,29 +20,7 @@ if [ "$RABBITMQ_ENV_LOADED" = 1 ]; then
 fi
 
 if [ -z "$RABBITMQ_SCRIPTS_DIR" ]; then
-    # We set +e here since since our test for "readlink -f" below needs to
-    # be able to fail.
-    set +e
-    # Determine where this script is really located (if this script is
-    # invoked from another script, this is the location of the caller)
-    SCRIPT_PATH="$0"
-    while [ -h "$SCRIPT_PATH" ] ; do
-        # Determine if readlink -f is supported at all. TODO clean this up.
-        FULL_PATH=`readlink -f $SCRIPT_PATH 2>/dev/null`
-        if [ "$?" != "0" ]; then
-          REL_PATH=`readlink $SCRIPT_PATH`
-          if expr "$REL_PATH" : '/.*' > /dev/null; then
-            SCRIPT_PATH="$REL_PATH"
-          else
-            SCRIPT_PATH="`dirname "$SCRIPT_PATH"`/$REL_PATH"
-          fi
-        else
-          SCRIPT_PATH=$FULL_PATH
-        fi
-    done
-    set -e
-
-    RABBITMQ_SCRIPTS_DIR=`dirname $SCRIPT_PATH`
+    RABBITMQ_SCRIPTS_DIR="@RABBITMQ_HOME@/sbin"
 fi
 
 _rmq_env_now()
